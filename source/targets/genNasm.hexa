// The Hexa Compiler
// Copyright (C) 2022 Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Generates NASM assembly
class GenNasm {
	static fun spawn() {
		return new GenNasm()
	}

	var project: NiceProject
	let reserved = []

	new () {}

	fun perform(normalizer): String {
		project = normalizer
		return stringify()
	}

	fun stringify() {
		// Contains forward declarations
		let header = ['; Generated by Hexa \(version) https://hexalang.github.io']
		if (project.package.addLicenseNoticeToOutput) {
			// rename addLicenseNoticeToOutput
			header.push('; \(project.package.name)')
			header.push('; LICENSE \(project.package.license)')
		} else {
			header.push('; The generated code is subject to the original license')
		}

		header.push(Fs.readFileSync(__dirname + '/library/native/hexa.asm').toString('utf8').split('\r\n').join('\n'))
		header.push('bits 64')
		header.push('default rel')
		header.push('section .head')
		header.push('; This is only Win64 for now')

		let out: [String] = []

		// Init
		out.push('global HEXA_MAIN\nHEXA_MAIN:\n')
		out.push('\tprintf("Starting...\\n");fflush(0);\n')
		out.push('\t%%%HEXA_STRINGS@@@\n')

		out.push('\t')
		out.push('\tprintf("Exiting...\\n");fflush(0);\n')
		out.push('\tmov rax, 0\n')
		out.push('\tret\n')

		out.push('; EOF\n')

		return (
			header.join('\n')
			+ '\n\n; Strings\nString_Strings resq 1\n' +
			out.join('')
		).split('\n').join('\r\n')
	}
}
