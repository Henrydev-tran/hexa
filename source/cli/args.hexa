// The Hexa Compiler
// Copyright (C) 2023 Oleh Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

/// Ignores some parts like leading .exe and .js
class ArgumentsParsingEngine {

	/// Do this before any parsing
	static fun cleanupArgv() {
		if process.argv[0].endsWith('node.exe') || process.argv[0].endsWith('node') {
			process.argv.shift()
			// The second one is .js file
			process.argv.shift()
		} else if process.argv[0].endsWith(/*hexa*/'.exe') {
			process.argv.shift()
			// TODO should be null-guarded after null-checks of `[]` enabled
			// `process.argv?[0].endsWith('.js')`
			if process.argv[0] != null, process.argv[0].endsWith('.js') {
				// The second one is .js file when bundled wih N-EXE
				process.argv.shift()
			}
		}
	}

	/// Entry point
	static fun engage() {
		cleanupArgv()
	}
}
