console.logString("Thank you for choosing Hexa")

fun wWinMain(hInstance: HINSTANCE, hPrevInstance: HINSTANCE, pCmdLine: PWSTR, nCmdShow: Int): Int
{
	console.logString("Entering wWinMain")

	// Register the window class.
	let class_name  = "Sample Window Class".wide() as! ConstArrayPointer<ClangWideChar>

	let wc: WNDCLASS = malloc(sizeOf<WNDCLASS>()) as! WNDCLASS
	zeroMemory(wc as! ArrayPointer<UInt8>, sizeOf<WNDCLASS>() as! UInt32)

	wc.lpfnWndProc   = windowProc
	wc.hInstance     = hInstance
	wc.lpszClassName = class_name

	registerClass(wc)

	// Create the window.

	let hwnd: HWND = createWindowEx(
		0,                              // Optional window styles.
		class_name,                     // Window class
		"Text of unicode Español-Portugués".wide(),    // Window text
		//"test?".wide(),    // Window text
		ws_overlappedwindow,            // Window style

		// Size and position
		cw_usedefault, cw_usedefault, cw_usedefault, cw_usedefault,

		null,       // Parent window
		null,       // Menu
		hInstance,  // Instance handle
		null        // Additional application data
		)

	if (hwnd == null)
	{
		console.logString("wWinMain#hwnd == null")
		return 0
	}

	showWindow(hwnd, nCmdShow)

	// Run the message loop.

	let msg: MSG = malloc(sizeOf<MSG>()) as! MSG
	while (getMessage(msg, null, 0, 0) > 0)
	{
		translateMessage(msg)
		dispatchMessage(msg)
	}

	console.logString("bye!")
	return 0
}

fun windowProc(hwnd: HWND, uMsg: Message, wParam: WPARAM, lParam: LPARAM): LRESULT
{
	switch (uMsg)
	{
	case WM_DESTROY:
		console.logString("WM_DESTROY")
		postQuitMessage(0)
		return 0

	case WM_PAINT:
		{
			console.logString("WM_PAINT")
			let ps: PAINTSTRUCT = malloc(sizeOf<PAINTSTRUCT>()) as! PAINTSTRUCT
			zeroMemory(ps as! ArrayPointer<UInt8>, sizeOf<PAINTSTRUCT>() as! UInt32)
			let hdc: HDC = beginPaint(hwnd, ps)

			// All painting occurs here, between BeginPaint and EndPaint.

			// TODO not require `!` in `as` here cause safe conversion
			fillRect(hdc, ps.rcPaint as! LPRECT, (color_window+1) as! HBRUSH)

			endPaint(hwnd, ps)
			free(ps as! RuntimeAllocated)
			console.logString("WM_PAINT done")
		}
		return 0

	}
	return defWindowProc(hwnd, uMsg, wParam, lParam)
}

let sw_showdefault = 10
wWinMain(hInstance: 0x400000 as! HINSTANCE, hPrevInstance: 0x400000 as! HINSTANCE, pCmdLine: null, nCmdShow: sw_showdefault)
